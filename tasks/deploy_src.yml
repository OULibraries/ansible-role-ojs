---
- name: Download OJS tarball
  get_url:
    url: "{{ ojs_download_url }}{{ ojs_tarball }}"
    dest: "/tmp/{{ ojs_tarball }}"
    checksum: "md5:{{ ojs_md5sum }}"

- name: Deploy OJS code to site
  unarchive:
    src: "/tmp/{{ ojs_tarball }}"
    dest: "{{item}}"
    creates:  "{{ item }}/ojs-{{ ojs_version }}/README.md"
    owner: nginx
    group: nginx
    copy: no
  register: deploy_ojs_code  

# Run this block conditionally when new code is deployed           
- name: Attach config and content dirs to app src
  block:
    - name: Copy files from ojs/public to public
      command: >
        rsync --recursive --times --ignore-existing "{{ item }}/ojs-{{ ojs_version }}/public/" "{{ item }}/public"
    - name: Remove public from ojs dist folder
      file:
        path: "{{ item }}/ojs-{{ ojs_version }}/public"
        state: absent
    - name: Add link to public folder
      file:
        src: "{{ item }}/public"      
        path: "{{ item }}/ojs-{{ ojs_version }}/public"
        state: link
    - name: Remove default config.inc.php from ojs-$version folder
      file:
        path: "{{ item }}/ojs-{{ ojs_version }}/config.inc.php"
        state: absent
    - name: Add link to config.inc.php to ojs-$version dir
      file:
        src: "{{ item }}/etc/config.inc.php"
        path: "{{ item }}/ojs-{{ ojs_version }}/config.inc.php"
        state: link
    - name: Link ojs-$version directory to ojs
      file:
        src: "{{ item }}/ojs-{{ ojs_version }}"
        path: "{{ item }}/ojs"
        state: link
  when: deploy_ojs_code.changed  

- name: Download  OJS Bootstrap Theme tarball
  get_url:
    url: "{{ ojs_bootstrap_url }}{{ ojs_bootstrap_tarball }}"
    dest: "/tmp/{{ ojs_bootstrap_tarball }}"
    checksum: "md5:{{ ojs_bootstrap_md5sum }}"

- name: Deploy OJS Bootstrap Theme
  unarchive:
    src: "/tmp/{{ ojs_bootstrap_tarball }}"
    dest: "{{item}}/ojs-{{ ojs_version }}/plugins"
    creates:  "{{item}}/ojs-{{ ojs_version }}/plugins/themes/bootstrap3/README.md"
    owner: nginx
    group: nginx
    copy: no

- name: Set SELinux context for etc subdirectory
  command: >
    semanage fcontext -a -t httpd_config_t  "{{ item }}/etc(/.*)?"

- name: Set SELinux context for ojs subdirectory
  command: >
    semanage fcontext -a -t httpd_sys_rw_content_t  "{{ item }}/ojs-{{ ojs_version }}(/.*)?"

- name: Set SELinux context for public subdirectory
  command: >
    semanage fcontext -a -t httpd_sys_rw_content_t  "{{ item }}/public(/.*)?"

- name: Set  SELinux context for files subdirectory
  command: >
    semanage fcontext -a -t httpd_sys_rw_content_t  "{{ item }}/files(/.*)?"

- name: Apply SELinux context for OJS installs
  command: >
    restorecon -rv {{ item }}
